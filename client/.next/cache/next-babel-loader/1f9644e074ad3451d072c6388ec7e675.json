{"ast":null,"code":"var _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/user/link/create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/layout.component\";\nimport axios from \"axios\";\nimport { API } from \"../../../config\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../utils/alerts\";\n\nconst Create = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    title: \"\",\n    url: \"\",\n    categories: [],\n    loadedCategories: [],\n    success: \"\",\n    error: \"\",\n    type: \"\",\n    medium: \"\"\n  });\n  const {\n    title,\n    url,\n    categories,\n    loadedCategories,\n    success,\n    error,\n    type,\n    medium\n  } = state;\n  useEffect(() => {\n    loadCategories();\n  }, [success]);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    console.log(\"loadCategories:\", response.data);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      loadedCategories: response.data\n    }));\n  };\n\n  const handleSubmit = async e => {\n    console.table({\n      title,\n      url,\n      categories,\n      type,\n      medium\n    });\n  };\n\n  const handleTitleChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      title: e.target.value,\n      error: \"\",\n      success: \"\"\n    }));\n  };\n\n  const handleUrlChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      url: e.target.value,\n      error: \"\",\n      success: \"\"\n    }));\n  };\n\n  const handleTypeClick = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      type: e.target.value,\n      success: \"\",\n      error: \"\"\n    }));\n  };\n\n  const showTypes = () => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleTypeClick,\n    checked: type === \"free\",\n    value: \"free\",\n    className: \"form-check-input\",\n    name: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), \"Free\", \" \")), __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleTypeClick,\n    checked: type === \"paid\",\n    value: \"paid\",\n    className: \"form-check-input\",\n    name: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), \" \", \"Paid\")));\n\n  const handleMediumClick = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      medium: e.target.value,\n      success: \"\",\n      error: \"\"\n    }));\n  };\n\n  const showMedium = () => __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleMediumClick,\n    checked: medium === \"video\",\n    value: \"video\",\n    className: \"form-check-input\",\n    name: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), \"Video\", \" \")), __jsx(\"div\", {\n    className: \"form-check ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    onClick: handleMediumClick,\n    checked: medium === \"book\",\n    value: \"book\",\n    className: \"form-check-input\",\n    name: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), \"Book\", \" \")));\n\n  const handleToogle = id => () => {\n    const index = categories.indexOf(id);\n    const all = [...categories];\n\n    if (index === -1) {\n      all.push(id);\n    } else {\n      all.splice(index, 1);\n    }\n\n    console.log(\"categories: \", all);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      categories: all,\n      success: \"\",\n      error: \"\"\n    }));\n  };\n\n  const showCategories = () => {\n    return loadedCategories && loadedCategories.map((category, index) => __jsx(\"li\", {\n      className: \"list-unstyled\",\n      key: category._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: handleToogle(category._id),\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }), __jsx(\"label\", {\n      className: \"form-check-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, category.name)));\n  };\n\n  const submitLinkForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: handleTitleChange,\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"URL\"), __jsx(\"input\", {\n    type: \"url\",\n    className: \"form-control\",\n    onChange: handleUrlChange,\n    value: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Submit Link/URL\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"Category\"), __jsx(\"ul\", {\n    style: {\n      maxHeight: \"100px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, showCategories())), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Type\"), showTypes()), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    className: \"text-muted ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Medium\"), showMedium())), __jsx(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, submitLinkForm())));\n};\n\nexport default Create;","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/user/link/create.js"],"names":["useState","useEffect","Layout","axios","API","showSuccessMessage","showErrorMessage","Create","state","setState","title","url","categories","loadedCategories","success","error","type","medium","loadCategories","response","get","console","log","data","handleSubmit","e","table","handleTitleChange","target","value","handleUrlChange","handleTypeClick","showTypes","handleMediumClick","showMedium","handleToogle","id","index","indexOf","all","push","splice","showCategories","map","category","_id","name","submitLinkForm","maxHeight","overflowY"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Layout from \"../../../components/layout.component\";\nimport axios from \"axios\";\nimport { API } from \"../../../config\";\n\nimport { showSuccessMessage, showErrorMessage } from \"../../../utils/alerts\";\n\nconst Create = () => {\n  const [state, setState] = useState({\n    title: \"\",\n    url: \"\",\n    categories: [],\n    loadedCategories: [],\n    success: \"\",\n    error: \"\",\n    type: \"\",\n    medium: \"\",\n  });\n\n  const {\n    title,\n    url,\n    categories,\n    loadedCategories,\n    success,\n    error,\n    type,\n    medium,\n  } = state;\n\n  useEffect(() => {\n    loadCategories();\n  }, [success]);\n\n  const loadCategories = async () => {\n    const response = await axios.get(`${API}/categories`);\n    console.log(\"loadCategories:\", response.data);\n    setState({\n      ...state,\n      loadedCategories: response.data,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    console.table({ title, url, categories, type, medium });\n  };\n\n  const handleTitleChange = (e) => {\n    setState({\n      ...state,\n      title: e.target.value,\n      error: \"\",\n      success: \"\",\n    });\n  };\n\n  const handleUrlChange = (e) => {\n    setState({\n      ...state,\n      url: e.target.value,\n      error: \"\",\n      success: \"\",\n    });\n  };\n\n  const handleTypeClick = (e) => {\n    setState({\n      ...state,\n      type: e.target.value,\n      success: \"\",\n      error: \"\",\n    });\n  };\n\n  const showTypes = () => (\n    <React.Fragment>\n      <div className=\"form-check ml-3\">\n        <label className=\"form-check-label\">\n          <input\n            type=\"radio\"\n            onClick={handleTypeClick}\n            checked={type === \"free\"}\n            value=\"free\"\n            className=\"form-check-input\"\n            name=\"type\"\n          />\n          Free{\" \"}\n        </label>\n      </div>\n      <div className=\"form-check ml-3\">\n        <label className=\"form-check-label\">\n          <input\n            type=\"radio\"\n            onClick={handleTypeClick}\n            checked={type === \"paid\"}\n            value=\"paid\"\n            className=\"form-check-input\"\n            name=\"type\"\n          />{\" \"}\n          Paid\n        </label>\n      </div>\n    </React.Fragment>\n  );\n\n  const handleMediumClick = (e) => {\n    setState({\n      ...state,\n      medium: e.target.value,\n      success: \"\",\n      error: \"\",\n    });\n  };\n\n  const showMedium = () => (\n    <React.Fragment>\n      <div className=\"form-check ml-3\">\n        <label className=\"form-check-label\">\n          <input\n            type=\"radio\"\n            onClick={handleMediumClick}\n            checked={medium === \"video\"}\n            value=\"video\"\n            className=\"form-check-input\"\n            name=\"medium\"\n          />\n          Video{\" \"}\n        </label>\n      </div>\n      <div className=\"form-check ml-3\">\n        <label className=\"form-check-label\">\n          <input\n            type=\"radio\"\n            onClick={handleMediumClick}\n            checked={medium === \"book\"}\n            value=\"book\"\n            className=\"form-check-input\"\n            name=\"medium\"\n          />\n          Book{\" \"}\n        </label>\n      </div>\n    </React.Fragment>\n  );\n\n  const handleToogle = (id) => () => {\n    const index = categories.indexOf(id);\n    const all = [...categories];\n\n    if (index === -1) {\n      all.push(id);\n    } else {\n      all.splice(index, 1);\n    }\n    console.log(\"categories: \", all);\n    setState({\n      ...state,\n      categories: all,\n      success: \"\",\n      error: \"\",\n    });\n  };\n\n  const showCategories = () => {\n    return (\n      loadedCategories &&\n      loadedCategories.map((category, index) => (\n        <li className=\"list-unstyled\" key={category._id}>\n          <input\n            type=\"checkbox\"\n            onChange={handleToogle(category._id)}\n            className=\"mr-2\"\n          />\n          <label className=\"form-check-label\">{category.name}</label>\n        </li>\n      ))\n    );\n  };\n\n  const submitLinkForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={handleTitleChange}\n          value={title}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">URL</label>\n        <input\n          type=\"url\"\n          className=\"form-control\"\n          onChange={handleUrlChange}\n          value={url}\n        />\n      </div>\n      <div>\n        <button className=\"btn btn-outline-warning\" type=\"submit\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h1>Submit Link/URL</h1>\n          <br />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"form-group\">\n            <label className=\"text-muted ml-4\">Category</label>\n            <ul style={{ maxHeight: \"100px\", overflowY: \"scroll\" }}>\n              {showCategories()}\n            </ul>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"text-muted ml-4\">Type</label>\n            {showTypes()}\n          </div>\n          <div className=\"form-group\">\n            <label className=\"text-muted ml-4\">Medium</label>\n            {showMedium()}\n          </div>\n        </div>\n        <div className=\"col-md-8\">{submitLinkForm()}</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}