{"ast":null,"code":"var _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/layout.component\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../utils/alerts\";\nimport { API } from \"../config\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { authenticate, isAuthenticate } from \"../utils/auth\";\n\nconst Login = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Login\"\n  });\n  useEffect(() => {\n    isAuthenticate() && Router.push(\"/\");\n  }, []);\n  const {\n    email,\n    password,\n    error,\n    success,\n    buttonText\n  } = state;\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      buttonText: \"Login\"\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: \"Logging in\"\n    }));\n\n    try {\n      const response = await axios.post(`${API}/login`, {\n        email,\n        password\n      });\n      authenticate(response, () => {\n        return isAuthenticate() && isAuthenticate().role === \"admin\" ? Router.push(\"/admin\") : Router.push(\"/user\");\n      });\n    } catch (error) {\n      console.log(error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: \"Login\",\n        error: error.data.message\n      }));\n    }\n  };\n\n  const loginForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Type your email\",\n    onChange: handleChange(\"email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    valu: password,\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Type your password\",\n    onChange: handleChange(\"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, state.buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Login\"), JSON.stringify(isAuthenticate()), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), loginForm(), __jsx(Link, {\n    href: \"/auth/password/forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: \"text-danger float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Forgot password\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/login.js"],"names":["Layout","useState","useEffect","axios","showSuccessMessage","showErrorMessage","API","Link","Router","authenticate","isAuthenticate","Login","state","setState","email","password","error","success","buttonText","push","handleChange","name","e","target","value","handleSubmit","preventDefault","response","post","role","console","log","data","message","loginForm","JSON","stringify"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout.component\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../utils/alerts\";\nimport { API } from \"../config\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { authenticate, isAuthenticate } from \"../utils/auth\";\n\nconst Login = () => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Login\",\n  });\n\n  useEffect(() => {\n    isAuthenticate() && Router.push(\"/\");\n  }, []);\n\n  const { email, password, error, success, buttonText } = state;\n\n  const handleChange = (name) => (e) => {\n    setState({\n      ...state,\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      buttonText: \"Login\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setState({\n      ...state,\n      buttonText: \"Logging in\",\n    });\n    try {\n      const response = await axios.post(`${API}/login`, {\n        email,\n        password,\n      });\n      authenticate(response, () => {\n        return isAuthenticate() && isAuthenticate().role === \"admin\"\n          ? Router.push(\"/admin\")\n          : Router.push(\"/user\");\n      });\n    } catch (error) {\n      console.log(error);\n      setState({\n        ...state,\n        buttonText: \"Login\",\n        error: error.data.message,\n      });\n    }\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          value={email}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type your email\"\n          onChange={handleChange(\"email\")}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          valu={password}\n          type=\"password\"\n          className=\"form-control\"\n          placeholder=\"Type your password\"\n          onChange={handleChange(\"password\")}\n        />\n      </div>\n      <div className=\"form-group\">\n        <button className=\"btn btn-outline-warning\">{state.buttonText}</button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"col-md6 offset-md-3\">\n        <h1>Login</h1>\n        {JSON.stringify(isAuthenticate())}\n        <br />\n        {success && showSuccessMessage(success)}\n        {error && showErrorMessage(error)}\n        {loginForm()}\n        <Link href=\"/auth/password/forgot\">\n          <a className=\"text-danger float-right\">Forgot password</a>\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}