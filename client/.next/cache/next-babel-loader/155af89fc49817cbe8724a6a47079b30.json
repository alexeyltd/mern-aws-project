{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/auth/password/reset/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router, { withRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../../utils/alerts\";\nimport { API } from \"../../../../config\";\nimport Layout from \"../../../../components/layout.component\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var router = _ref.router;\n\n  var _useState = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\",\n    success: \"\",\n    error: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var name = state.name,\n      token = state.token,\n      buttonText = state.buttonText,\n      success = state.success,\n      error = state.error;\n  useEffect(function () {\n    var decode = jwt.decode(router.query.id);\n\n    if (decode) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: decode.name,\n        token: router.query.id\n      }));\n    }\n  }, []);\n\n  var handleChange = function handleChange(e) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      newPassword: e.target.value,\n      success: \"\",\n      error: \"\"\n    }));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(\"post email to\", email);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: \"Sending\"\n              }));\n              _context.prev = 3;\n              _context.next = 6;\n              return axios.patch(\"\".concat(API, \"/reset-password\"), {\n                resetPasswordLink: token,\n                newPassword: newPassword\n              });\n\n            case 6:\n              response = _context.sent;\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                newPassword: \"\",\n                buttonText: \"Done\",\n                success: response.data.message\n              }));\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](3);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                buttonText: 'Forgot Password',\n                error: _context.t0.response.data.error\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 10]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var passwordResetForm = function passwordResetForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      onChange: handleChange,\n      value: newPassword,\n      placeholder: \"Type your password\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-outline-warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, buttonText)));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Forgot Password\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), passwordResetForm())));\n};\n\n_s(ResetPassword, \"pMea/nTbTyywQUGrrQrOQp/n12I=\");\n\n_c = ResetPassword;\nexport default _c2 = withRouter(ResetPassword);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResetPassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/auth/password/reset/[id].js"],"names":["Router","withRouter","useEffect","useState","jwt","axios","showSuccessMessage","showErrorMessage","API","Layout","ResetPassword","router","name","token","newPassword","buttonText","success","error","state","setState","decode","query","id","handleChange","e","target","value","handleSubmit","preventDefault","console","log","email","patch","resetPasswordLink","response","data","message","passwordResetForm"],"mappings":"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","sourcesContent":["import Router, { withRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../../utils/alerts\";\nimport { API } from \"../../../../config\";\nimport Layout from \"../../../../components/layout.component\";\n\nconst ResetPassword = ({ router }) => {\n  const [state, setState] = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\",\n    success: \"\",\n    error: \"\",\n  });\n\n  const { name, token, buttonText, success, error } = state;\n\n  useEffect(() => {\n    const decode = jwt.decode(router.query.id);\n    if (decode) {\n      setState({\n        ...state,\n        name: decode.name,\n        token: router.query.id,\n      });\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      newPassword: e.target.value,\n      success: \"\",\n      error: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(`post email to`, email);\n    setState({ ...state, buttonText: \"Sending\" });\n    try {\n      const response = await axios.patch(`${API}/reset-password`, {\n        resetPasswordLink: token,\n        newPassword,\n      });\n      setState({\n        ...state,\n        newPassword: \"\",\n        buttonText: \"Done\",\n        success: response.data.message,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        buttonText: 'Forgot Password',\n        error: error.response.data.error,\n      });\n    }\n  };\n\n  const passwordResetForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          onChange={handleChange}\n          value={newPassword}\n          placeholder=\"Type your password\"\n          required\n        />\n      </div>\n      <div>\n        <button className=\"btn btn-outline-warning\">{buttonText}</button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h1>Forgot Password</h1>\n          <br />\n          {success && showSuccessMessage(success)}\n          {error && showErrorMessage(error)}\n          {passwordResetForm()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\nexport default withRouter(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}