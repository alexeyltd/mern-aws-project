{"ast":null,"code":"var _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/auth/password/reset/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router, { withRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../../utils/alerts\";\nimport { API } from \"../../../../config\";\nimport Layout from \"../../../../components/layout.component\";\n\nconst ResetPassword = ({\n  router\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\",\n    success: \"\",\n    error: \"\"\n  });\n  const {\n    name,\n    token,\n    newPassword,\n    buttonText,\n    success,\n    error\n  } = state;\n  useEffect(() => {\n    const decode = jwt.decode(router.query.id);\n\n    if (decode) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: decode.name,\n        token: router.query.id\n      }));\n    }\n  }, [router]);\n\n  const handleChange = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      newPassword: e.target.value,\n      success: \"\",\n      error: \"\"\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: \"Sending\"\n    }));\n\n    try {\n      const response = await axios.patch(`${API}/reset-password`, {\n        resetPasswordLink: token,\n        newPassword\n      });\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        newPassword: \"\",\n        buttonText: \"Done\",\n        success: response.data.message\n      }));\n    } catch (error) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        buttonText: 'Forgot Password',\n        error: error.response.data.error\n      }));\n    }\n  };\n\n  const passwordResetForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: handleChange,\n    value: newPassword,\n    placeholder: \"Type your password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Hi, \", name, \", ready to reset password?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), success && showSuccessMessage(success), error && showErrorMessage(error), passwordResetForm())));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/auth/password/reset/[id].js"],"names":["Router","withRouter","useEffect","useState","jwt","axios","showSuccessMessage","showErrorMessage","API","Layout","ResetPassword","router","state","setState","name","token","newPassword","buttonText","success","error","decode","query","id","handleChange","e","target","value","handleSubmit","preventDefault","response","patch","resetPasswordLink","data","message","passwordResetForm"],"mappings":"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","sourcesContent":["import Router, { withRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport axios from \"axios\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../../utils/alerts\";\nimport { API } from \"../../../../config\";\nimport Layout from \"../../../../components/layout.component\";\n\nconst ResetPassword = ({ router }) => {\n  const [state, setState] = useState({\n    name: \"\",\n    token: \"\",\n    newPassword: \"\",\n    buttonText: \"Reset password\",\n    success: \"\",\n    error: \"\",\n  });\n\n  const { name, token, newPassword, buttonText, success, error } = state;\n\n  useEffect(() => {\n    const decode = jwt.decode(router.query.id);\n    if (decode) {\n      setState({\n        ...state,\n        name: decode.name,\n        token: router.query.id,\n      });\n    }\n  }, [router]);\n\n  const handleChange = (e) => {\n    setState({\n      ...state,\n      newPassword: e.target.value,\n      success: \"\",\n      error: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setState({ ...state, buttonText: \"Sending\" });\n    try {\n      const response = await axios.patch(`${API}/reset-password`, {\n        resetPasswordLink: token,\n        newPassword,\n      });\n      setState({\n        ...state,\n        newPassword: \"\",\n        buttonText: \"Done\",\n        success: response.data.message,\n      });\n    } catch (error) {\n      setState({\n        ...state,\n        buttonText: 'Forgot Password',\n        error: error.response.data.error,\n      });\n    }\n  };\n\n  const passwordResetForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          onChange={handleChange}\n          value={newPassword}\n          placeholder=\"Type your password\"\n          required\n        />\n      </div>\n      <div>\n        <button className=\"btn btn-outline-warning\">{buttonText}</button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h1>Hi, {name}, ready to reset password?</h1>\n          <br />\n          {success && showSuccessMessage(success)}\n          {error && showErrorMessage(error)}\n          {passwordResetForm()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\nexport default withRouter(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}