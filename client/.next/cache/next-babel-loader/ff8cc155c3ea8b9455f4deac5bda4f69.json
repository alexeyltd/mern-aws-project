{"ast":null,"code":"import cookie from \"js-cookie\";\nimport Router from \"next/router\";\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key);\n  }\n};\nexport var getCookie = function getCookie(key) {\n  return true ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\nexport var getCookieFromBrowser = function getCookieFromBrowser(key) {\n  if (true) {\n    return cookie.get(key);\n  }\n};\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n};\nexport var authenticate = function authenticate(response, callback) {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\nexport var isAuthenticate = function isAuthenticate() {\n  if (true) {\n    var cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n\n  return false;\n};\nexport var logout = function logout() {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push(\"/login\");\n};","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/utils/auth.js"],"names":["cookie","Router","setCookie","key","value","set","expires","removeCookie","remove","getCookie","getCookieFromBrowser","getCookieFromServer","req","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","callback","data","token","user","isAuthenticate","cookieChecked","getItem","parse","logout","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACvC,YAAqB;AACnBJ,IAAAA,MAAM,CAACK,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,EAAE;AADY,KAAvB;AAGD;AACF,CANM;AAQP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAS;AACnC,YAAqB;AACnBH,IAAAA,MAAM,CAACQ,MAAP,CAAcL,GAAd;AACD;AACF,CAJM;AAMP,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACN,GAAD,EAAS;AAChC,SAAO,OACHO,oBAAoB,CAACP,GAAD,CADjB,GAEHQ,mBAAmB,CAACR,GAAD,EAAMS,GAAN,CAFvB;AAGD,CAJM;AAMP,OAAO,IAAMF,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,GAAD,EAAS;AAC3C,YAAqB;AACnB,WAAOH,MAAM,CAACa,GAAP,CAAWV,GAAX,CAAP;AACD;AACF,CAJM;AAMP,OAAO,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACX,GAAD,EAAMC,KAAN,EAAgB;AAC7C,YAAqB;AACnBW,IAAAA,YAAY,CAACC,OAAb,CAAqBb,GAArB,EAA0Bc,IAAI,CAACC,SAAL,CAAed,KAAf,CAA1B;AACD;AACF,CAJM;AAMP,OAAO,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChB,GAAD,EAAS;AACzC,YAAqB;AACnBY,IAAAA,YAAY,CAACK,UAAb,CAAwBjB,GAAxB;AACD;AACF,CAJM;AAMP,OAAO,IAAMkB,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAClDrB,EAAAA,SAAS,CAAC,OAAD,EAAUoB,QAAQ,CAACE,IAAT,CAAcC,KAAxB,CAAT;AACAX,EAAAA,eAAe,CAAC,MAAD,EAASQ,QAAQ,CAACE,IAAT,CAAcE,IAAvB,CAAf;AACAH,EAAAA,QAAQ;AACT,CAJM;AAMP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,YAAqB;AACnB,QAAMC,aAAa,GAAGnB,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAImB,aAAJ,EAAmB;AACjB,UAAIb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChC,eAAOZ,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BxB,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAY,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAlB,EAAAA,MAAM,CAAC+B,IAAP,CAAY,QAAZ;AACD,CAJM","sourcesContent":["import cookie from \"js-cookie\";\nimport Router from \"next/router\";\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\nexport const removeCookie = (key) => {\n  if (process.browser) {\n    cookie.remove(key);\n  }\n};\n\nexport const getCookie = (key) => {\n  return process.browser\n    ? getCookieFromBrowser(key)\n    : getCookieFromServer(key, req);\n};\n\nexport const getCookieFromBrowser = (key) => {\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const removeLocalStorage = (key) => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport const authenticate = (response, callback) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\n\nexport const isAuthenticate = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n  return false;\n};\n\nexport const logout = () => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push(\"/login\");\n};\n"]},"metadata":{},"sourceType":"module"}