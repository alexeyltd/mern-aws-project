{"ast":null,"code":"import cookie from \"js-cookie\";\nimport { Router } from \"next/router\";\nimport { remove } from \"../../server/models/user\";\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key);\n  }\n};\nexport var getCookie = function getCookie(key) {\n  if (true) {\n    return cookie.get(key);\n  }\n};\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (true) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n};\nexport var authenticate = function authenticate(response, callback) {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\nexport var isAuthenticate = function isAuthenticate() {\n  if (true) {\n    var cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n\n  return false;\n};\nexport var logout = function logout() {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push('/login');\n};","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/utils/auth.js"],"names":["cookie","Router","remove","setCookie","key","value","set","expires","removeCookie","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","callback","data","token","user","isAuthenticate","cookieChecked","getItem","parse","logout","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACvC,YAAqB;AACnBL,IAAAA,MAAM,CAACM,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,EAAE;AADY,KAAvB;AAGD;AACF,CANM;AAQP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAS;AACnC,YAAqB;AACnBJ,IAAAA,MAAM,CAACE,MAAP,CAAcE,GAAd;AACD;AACF,CAJM;AAMP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACL,GAAD,EAAS;AAChC,YAAqB;AACnB,WAAOJ,MAAM,CAACU,GAAP,CAAWN,GAAX,CAAP;AACD;AACF,CAJM;AAMP,OAAO,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACP,GAAD,EAAMC,KAAN,EAAgB;AAC7C,YAAqB;AACnBO,IAAAA,YAAY,CAACC,OAAb,CAAqBT,GAArB,EAA0BU,IAAI,CAACC,SAAL,CAAeV,KAAf,CAA1B;AACD;AACF,CAJM;AAMP,OAAO,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACZ,GAAD,EAAS;AACzC,YAAqB;AACnBQ,IAAAA,YAAY,CAACK,UAAb,CAAwBb,GAAxB;AACD;AACF,CAJM;AAMP,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAClDjB,EAAAA,SAAS,CAAC,OAAD,EAAUgB,QAAQ,CAACE,IAAT,CAAcC,KAAxB,CAAT;AACAX,EAAAA,eAAe,CAAC,MAAD,EAASQ,QAAQ,CAACE,IAAT,CAAcE,IAAvB,CAAf;AACAH,EAAAA,QAAQ;AACT,CAJM;AAMP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,YAAqB;AACnB,QAAMC,aAAa,GAAGhB,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAIgB,aAAJ,EAAmB;AACjB,UAAIb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChC,eAAOZ,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BpB,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAQ,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAf,EAAAA,MAAM,CAAC4B,IAAP,CAAY,QAAZ;AACD,CAJM","sourcesContent":["import cookie from \"js-cookie\";\nimport { Router } from \"next/router\";\nimport { remove } from \"../../server/models/user\";\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\nexport const removeCookie = (key) => {\n  if (process.browser) {\n    cookie.remove(key);\n  }\n};\n\nexport const getCookie = (key) => {\n  if (process.browser) {\n    return cookie.get(key);\n  }\n};\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const removeLocalStorage = (key) => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport const authenticate = (response, callback) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\n\nexport const isAuthenticate = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n  return false;\n};\n\nexport const logout = () => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push('/login')\n};\n"]},"metadata":{},"sourceType":"module"}