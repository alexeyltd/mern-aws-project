{"ast":null,"code":"import cookie from \"js-cookie\";\nimport Router from \"next/router\";\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key);\n  }\n};\nexport const getCookie = key => {\n  return false ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\nexport const authenticate = (response, callback) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\nexport const isAuthenticate = () => {\n  if (false) {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n\n  return false;\n};\nexport const logout = () => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push(\"/login\");\n};","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/utils/auth.js"],"names":["cookie","Router","setCookie","key","value","set","expires","removeCookie","remove","getCookie","getCookieFromBrowser","getCookieFromServer","req","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","callback","data","token","user","isAuthenticate","cookieChecked","getItem","parse","logout","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvC,aAAqB;AACnBJ,IAAAA,MAAM,CAACK,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,EAAE;AADY,KAAvB;AAGD;AACF,CANM;AAQP,OAAO,MAAMC,YAAY,GAAIJ,GAAD,IAAS;AACnC,aAAqB;AACnBH,IAAAA,MAAM,CAACQ,MAAP,CAAcL,GAAd;AACD;AACF,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAIN,GAAD,IAAS;AAChC,SAAO,QAAkBO,oBAAoB,CAACP,GAAD,CAAtC,GAA8CQ,mBAAmB,CAACR,GAAD,EAAMS,GAAN,CAAxE;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,CAACV,GAAD,EAAMC,KAAN,KAAgB;AAC7C,aAAqB;AACnBU,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,GAArB,EAA0Ba,IAAI,CAACC,SAAL,CAAeb,KAAf,CAA1B;AACD;AACF,CAJM;AAMP,OAAO,MAAMc,kBAAkB,GAAIf,GAAD,IAAS;AACzC,aAAqB;AACnBW,IAAAA,YAAY,CAACK,UAAb,CAAwBhB,GAAxB;AACD;AACF,CAJM;AAMP,OAAO,MAAMiB,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDpB,EAAAA,SAAS,CAAC,OAAD,EAAUmB,QAAQ,CAACE,IAAT,CAAcC,KAAxB,CAAT;AACAX,EAAAA,eAAe,CAAC,MAAD,EAASQ,QAAQ,CAACE,IAAT,CAAcE,IAAvB,CAAf;AACAH,EAAAA,QAAQ;AACT,CAJM;AAMP,OAAO,MAAMI,cAAc,GAAG,MAAM;AAClC,aAAqB;AACnB,UAAMC,aAAa,GAAGlB,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAIkB,aAAJ,EAAmB;AACjB,UAAIb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChC,eAAOZ,IAAI,CAACa,KAAL,CAAWf,YAAY,CAACc,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1BvB,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAW,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAjB,EAAAA,MAAM,CAAC8B,IAAP,CAAY,QAAZ;AACD,CAJM","sourcesContent":["import cookie from \"js-cookie\";\nimport Router from \"next/router\";\n\nexport const setCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {\n      expires: 1,\n    });\n  }\n};\n\nexport const removeCookie = (key) => {\n  if (process.browser) {\n    cookie.remove(key);\n  }\n};\n\nexport const getCookie = (key) => {\n  return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nexport const setLocalStorage = (key, value) => {\n  if (process.browser) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nexport const removeLocalStorage = (key) => {\n  if (process.browser) {\n    localStorage.removeItem(key);\n  }\n};\n\nexport const authenticate = (response, callback) => {\n  setCookie(\"token\", response.data.token);\n  setLocalStorage(\"user\", response.data.user);\n  callback();\n};\n\nexport const isAuthenticate = () => {\n  if (process.browser) {\n    const cookieChecked = getCookie(\"token\");\n    if (cookieChecked) {\n      if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n      }\n    }\n  }\n  return false;\n};\n\nexport const logout = () => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  Router.push(\"/login\");\n};\n"]},"metadata":{},"sourceType":"module"}