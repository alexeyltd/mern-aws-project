{"ast":null,"code":"var _jsxFileName = \"/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/admin/category/create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../../../components/layout.component\";\nimport withAdmin from \"../../withAdmin\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../../config\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../utils/alerts\";\nimport Resizer from \"react-image-file-resizer\";\n\nconst Create = ({\n  user,\n  token\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    name: \"\",\n    content: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Create\",\n    imageUploadText: \"Upload image\",\n    image: \"\"\n  });\n  const {\n    name,\n    content,\n    success,\n    error,\n    buttonText,\n    imageUploadText,\n    image\n  } = state;\n\n  const handleChange = name => e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      imageUploadText: imageName\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      buttonText: \"Creating\"\n    }));\n\n    try {\n      console.log(`response formData`, ...formData);\n      const response = await axios.post(`${API}/category`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(`response category`, response);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: \"\",\n        formData: new FormData(),\n        buttonText: \"Created\",\n        imageUploadText: \"Upload image\"\n      }));\n    } catch (error) {\n      console.log(`response category error`, error);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        name: \"\",\n        buttonText: \"Create\",\n        error: error.res\n      }));\n    }\n  };\n\n  const handleImage = e => {\n    var fileInput = false;\n\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(e.target.files[0], 300, 300, \"JPEG\", 100, 0, uri => {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          image: uri\n        }));\n      }, \"base64\");\n    }\n  };\n\n  const createCategoryForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-mited\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Name\"), __jsx(\"input\", {\n    onChange: handleChange(\"name\"),\n    value: name,\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"text-mited\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Content\"), __jsx(\"textarea\", {\n    onChange: handleChange(\"content\"),\n    value: content,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Text\", __jsx(\"input\", {\n    onChange: handleImage,\n    type: \"file\",\n    className: \"form-control\",\n    accept: \"image/*\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-outline-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, buttonText)));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Create category\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), createCategoryForm())));\n};\n\nexport default withAdmin(Create);","map":{"version":3,"sources":["/Users/a.pavlenko/Documents/work-projects/react-aws-project/client/pages/admin/category/create.js"],"names":["Layout","withAdmin","useState","useEffect","axios","API","showSuccessMessage","showErrorMessage","Resizer","Create","user","token","state","setState","name","content","error","success","buttonText","imageUploadText","image","handleChange","e","target","value","imageName","handleSubmit","preventDefault","console","log","formData","response","post","headers","Authorization","FormData","res","handleImage","fileInput","files","imageFileResizer","uri","createCategoryForm"],"mappings":"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","sourcesContent":["import Layout from \"../../../components/layout.component\";\nimport withAdmin from \"../../withAdmin\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"../../../config\";\nimport { showSuccessMessage, showErrorMessage } from \"../../../utils/alerts\";\nimport Resizer from \"react-image-file-resizer\";\n\nconst Create = ({ user, token }) => {\n  const [state, setState] = useState({\n    name: \"\",\n    content: \"\",\n    error: \"\",\n    success: \"\",\n    buttonText: \"Create\",\n    imageUploadText: \"Upload image\",\n    image: \"\",\n  });\n\n  const {\n    name,\n    content,\n    success,\n    error,\n    buttonText,\n    imageUploadText,\n    image,\n  } = state;\n\n  const handleChange = (name) => (e) => {\n    setState({\n      ...state,\n      [name]: e.target.value,\n      error: \"\",\n      success: \"\",\n      imageUploadText: imageName,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setState({\n      ...state,\n      buttonText: \"Creating\",\n    });\n    try {\n      console.log(`response formData`, ...formData);\n      const response = await axios.post(`${API}/category`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(`response category`, response);\n      setState({\n        ...state,\n        name: \"\",\n        formData: new FormData(),\n        buttonText: \"Created\",\n        imageUploadText: \"Upload image\",\n      });\n    } catch (error) {\n      console.log(`response category error`, error);\n      setState({\n        ...state,\n        name: \"\",\n        buttonText: \"Create\",\n        error: error.res,\n      });\n    }\n  };\n\n  const handleImage = (e) => {\n    var fileInput = false;\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n    if (fileInput) {\n      Resizer.imageFileResizer(\n        e.target.files[0],\n        300,\n        300,\n        \"JPEG\",\n        100,\n        0,\n        (uri) => {\n          setState({\n            ...state,\n            image: uri,\n          });\n        },\n        \"base64\"\n      );\n    }\n  };\n\n  const createCategoryForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"text-mited\">Name</label>\n        <input\n          onChange={handleChange(\"name\")}\n          value={name}\n          type=\"text\"\n          className=\"form-control\"\n        ></input>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"text-mited\">Content</label>\n        <textarea\n          onChange={handleChange(\"content\")}\n          value={content}\n          className=\"form-control\"\n        ></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label className=\"btn btn-outline-secondary\">\n          Text\n          <input\n            onChange={handleImage}\n            type=\"file\"\n            className=\"form-control\"\n            accept=\"image/*\"\n            hidden\n          ></input>\n        </label>\n      </div>\n      <div>\n        <button className=\"btn btn-outline-warning\">{buttonText}</button>\n      </div>\n    </form>\n  );\n\n  return (\n    <Layout>\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h1>Create category</h1>\n          <br />\n          {createCategoryForm()}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default withAdmin(Create);\n"]},"metadata":{},"sourceType":"module"}